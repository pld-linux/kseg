diff -ur kseg-0.3/BuildReverse.cpp kseg-0.3.new/BuildReverse.cpp
--- kseg-0.3/BuildReverse.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/BuildReverse.cpp	Mon Jul 15 19:38:48 2002
@@ -30,6 +30,9 @@
 #include <hash_map>
 #include <vector>
 
+using std::vector;
+
+
 
 class edge {
 public:
@@ -154,7 +157,7 @@
 
   bool createChangeableEdge(G_ref *r1, G_ref *r2, G_matrix forw, G_matrix rev, int level) {
     G_matrix m = getPath(r1, r2);
-    if(m != G_matrix::getNullMatrix()) { //check validity
+    if( !(m == G_matrix::getNullMatrix())) { //check validity
       if(m.almostEqual(forw) == false) return false;
     }
 
diff -ur kseg-0.3/G_polygon.H kseg-0.3.new/G_polygon.H
--- kseg-0.3/G_polygon.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/G_polygon.H	Mon Jul 15 19:38:48 2002
@@ -33,7 +33,7 @@
 public:
   G_polygon() { }
   G_polygon(const G_polygon &p) : G_filled() { points = p.points; }
-  G_polygon(vector<G_point> p) : G_filled() { points = p; }
+  G_polygon(std::vector<G_point> p) : G_filled() { points = p; }
   
   virtual G_geometry *copy() const { return new G_polygon(*this); }
 
@@ -59,7 +59,7 @@
   static G_polygon inValid() { return G_polygon(); }
 
 private:
-  vector<G_point> points;
+  std::vector<G_point> points;
 };
 
 #endif //G_POLYGON_H
diff -ur kseg-0.3/G_polygonObject.cpp kseg-0.3.new/G_polygonObject.cpp
--- kseg-0.3/G_polygonObject.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/G_polygonObject.cpp	Mon Jul 15 19:38:48 2002
@@ -24,6 +24,9 @@
 #include "G_object.H"
 #include <stdio.h>
 
+using std::vector;
+
+
 void G_polygonObject::update()
 {
 
diff -ur kseg-0.3/G_ref.H kseg-0.3.new/G_ref.H
--- kseg-0.3/G_ref.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/G_ref.H	Mon Jul 15 19:38:48 2002
@@ -139,9 +139,11 @@
 QDataStream &operator<<(QDataStream &, G_ref &);
 QDataStream &operator>>(QDataStream &, G_ref &);
 
+namespace std {
 struct hash<G_ref *>
 {
  size_t operator ()(const G_ref *r) const { return (size_t)r; }
 };
+}
 
 #endif //G_REF_H
diff -ur kseg-0.3/G_refs.H kseg-0.3.new/G_refs.H
--- kseg-0.3/G_refs.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/G_refs.H	Mon Jul 15 19:38:48 2002
@@ -37,7 +37,7 @@
 //all the weird funcs are for "backward compatibility"
 //meaning that I was too lazy to rewrite all
 //the code that uses G_refs
-class G_refs : public vector<G_ref *>
+class G_refs : public std::vector<G_ref *>
 {
 public:
   G_refs();
@@ -46,9 +46,9 @@
   void appendUnique(G_ref *);
 
   void assertUnique() { //don't call unless you're debugging (slow!)
-    vector<G_ref *> v(*this);
+    std::vector<G_ref *> v(*this);
     sort(v.begin(), v.end());
-    vector<G_ref *>::iterator it = v.end();
+    std::vector<G_ref *>::iterator it = v.end();
     ASSERT(it == unique(v.begin(), v.end()));
   }
 
@@ -60,12 +60,12 @@
   void append(G_ref *x) { push_back(x); }
   unsigned int count() const { return size(); }
 
-  void insert(int pos, G_ref *what) { vector<G_ref *>::insert(begin() + pos, what); }
+  void insert(int pos, G_ref *what) { std::vector<G_ref *>::insert(begin() + pos, what); }
   void remove(int pos) { if(pos != -1) erase(begin() + pos); }
   void removeRef(G_ref *r);
 
-  bool containsRef(const G_ref *r) const { return ::find(begin(), end(), r) != end(); }
-  int find(const G_ref *r) const  { ASSERT(!mHoldingRemovals); return rend() - ::find(rbegin(), rend(), r) - 1; }
+  bool containsRef(const G_ref *r) const { return std::find(begin(), end(), r) != end(); }
+  int find(const G_ref *r) const  { ASSERT(!mHoldingRemovals); return rend() - std::find(rbegin(), rend(), r) - 1; }
   int findRef(const G_ref *r) const { return find(r); }
 
   G_ref *at(int i) { return (*this)[i]; }
diff -ur kseg-0.3/G_refs.cpp kseg-0.3.new/G_refs.cpp
--- kseg-0.3/G_refs.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/G_refs.cpp	Mon Jul 15 19:38:48 2002
@@ -109,7 +109,7 @@
   
   clear();
   hash_set<G_ref *> added;
-  vector<topSortState> stateStack;
+  std::vector<topSortState> stateStack;
 
   AncestorSearcher *as;
 
@@ -160,7 +160,7 @@
 
   reverse(begin(), end());
 
-  vector<G_ref *>::insert(end(), loops.begin(), loops.end());
+  std::vector<G_ref *>::insert(end(), loops.begin(), loops.end());
 
   if(target) delete as;
 }
diff -ur kseg-0.3/KSegConstruction.H kseg-0.3.new/KSegConstruction.H
--- kseg-0.3/KSegConstruction.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegConstruction.H	Mon Jul 15 19:38:48 2002
@@ -71,9 +71,9 @@
   bool canConstructionMakeInitial();
   bool canConstructionRecurse();
 
-  static ScanType scanConstructionFile(QFile f, const G_refs &selection);
-  static bool match(const G_refs& sel, const vector<int>& given, vector<int> &permutation);
-  static bool match(const G_refs& sel, const G_refs &given, vector<int> &permutation);
+  static ScanType scanConstructionFile(QFile& f, const G_refs &selection);
+  static bool match(const G_refs& sel, const std::vector<int>& given, std::vector<int> &permutation);
+  static bool match(const G_refs& sel, const G_refs &given, std::vector<int> &permutation);
 
 public slots:
   void constructionMakeNormal();
diff -ur kseg-0.3/KSegConstruction.cpp kseg-0.3.new/KSegConstruction.cpp
--- kseg-0.3/KSegConstruction.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegConstruction.cpp	Mon Jul 15 19:38:48 2002
@@ -81,7 +81,7 @@
   int i, j;
 
   //match the givens:
-  vector<int> givenPerm;
+  std::vector<int> givenPerm;
   bool tmp = match(givens, given, givenPerm);
   ASSERT(tmp);
 
@@ -205,7 +205,7 @@
 
 bool KSegConstruction::doesMatch(const G_refs& which)
 {
-  vector<int> v; //dummy
+  std::vector<int> v; //dummy
   return match(which, given, v);
 }
 
@@ -326,9 +326,10 @@
 }
 
 
-ScanType KSegConstruction::scanConstructionFile(QFile f, const G_refs &selected)
+ScanType KSegConstruction::scanConstructionFile(QFile& f, 
+						const G_refs &selected)
 {
-  vector<int> givens;
+  std::vector<int> givens;
 
     //check to make sure the file won't crash us.
   if(!f.open(IO_ReadOnly))
@@ -371,7 +372,7 @@
     givens.push_back(tmp);
   }
 
-  vector<int> v; //dummy
+  std::vector<int> v; //dummy
 
   if(match(selected, givens, v))
     return MATCHED;
@@ -381,10 +382,10 @@
 //find a permutation of sel which matches given.
 //set perm to that permutation or return false
 //if it doesn't exist.
-bool KSegConstruction::match(const G_refs& sel, const vector<int>& given, vector<int> &perm) {
+bool KSegConstruction::match(const G_refs& sel, const std::vector<int>& given, std::vector<int> &perm) {
   if(sel.size() != given.size()) return false;
 
-  vector<int> revperm(sel.size());
+  std::vector<int> revperm(sel.size());
   perm.resize(sel.size());
 
   int i, j, k;
@@ -453,8 +454,8 @@
 }
 
 
-bool KSegConstruction::match(const G_refs& sel, const G_refs &given, vector<int> &perm) {
-  vector<int> g;
+bool KSegConstruction::match(const G_refs& sel, const G_refs &given, std::vector<int> &perm) {
+  std::vector<int> g;
   int i;
 
   for(i = 0; i < given.size(); ++i) {
diff -ur kseg-0.3/KSegConstructionList.H kseg-0.3.new/KSegConstructionList.H
--- kseg-0.3/KSegConstructionList.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegConstructionList.H	Mon Jul 15 19:38:48 2002
@@ -33,7 +33,7 @@
 #include "G_refSearcher.H"
 
 
-class ListReferenceFetcher : public ReferenceFetcher, public vector<KFormula *>
+class ListReferenceFetcher : public ReferenceFetcher, public std::vector<KFormula *>
 {
 public:
   virtual ~ListReferenceFetcher() {}
diff -ur kseg-0.3/KSegProperties.H kseg-0.3.new/KSegProperties.H
--- kseg-0.3/KSegProperties.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegProperties.H	Mon Jul 15 19:38:48 2002
@@ -27,6 +27,8 @@
 #include <qstring.h>
 
 
+namespace std {
+
 struct hash<QString>
 {
   size_t operator ()(QString s) const
@@ -40,6 +42,7 @@
     return (size_t)l;
   }
 };
+}
 
 //singleton class
 class KSegProperties
@@ -57,7 +60,7 @@
   QString getProp(QString name);
   void setProp(QString name, QString value);
 
-  hash_map<QString,QString> myMap;
+  std::hash_map<QString,QString> myMap;
 
   static KSegProperties *properties;
   static const QString configFile;
diff -ur kseg-0.3/KSegWindow.H kseg-0.3.new/KSegWindow.H
--- kseg-0.3/KSegWindow.H	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegWindow.H	Mon Jul 15 19:38:48 2002
@@ -114,7 +114,7 @@
 private:
   void compressRecentList();
 
-  static vector<QString> KSegWindow::getValidConstructionFiles();
+  static std::vector<QString> KSegWindow::getValidConstructionFiles();
   static QString quickPlayDirectory;
 
   KSegView *view;
diff -ur kseg-0.3/KSegWindow.cpp kseg-0.3.new/KSegWindow.cpp
--- kseg-0.3/KSegWindow.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/KSegWindow.cpp	Mon Jul 15 19:38:48 2002
@@ -900,11 +900,12 @@
 
   quickPlayMenu->insertSeparator();
 
-  vector<QString> files = getValidConstructionFiles();
+  std::vector<QString> files = getValidConstructionFiles();
 
   int i;
   for(i = 0; i < (int)files.size(); ++i) {
-    ScanType s = KSegConstruction::scanConstructionFile(QFile(files[i]),
+    QFile f(files[i]);
+    ScanType s = KSegConstruction::scanConstructionFile(f,
 							view->getDocument()->getSelected());
     if(s == INVALID) continue;
 
@@ -927,10 +928,11 @@
 
 void KSegWindow::quickPlay(int which)
 {
-  vector<QString> files = getValidConstructionFiles();
+  std::vector<QString> files = getValidConstructionFiles();
 
   //just in case:
-  ScanType s = KSegConstruction::scanConstructionFile(QFile(files[which]),
+  QFile fscan(files[which]);
+  ScanType s = KSegConstruction::scanConstructionFile(fscan,
 						      view->getDocument()->getSelected());
 
   ASSERT(s == MATCHED);
@@ -946,7 +948,7 @@
     f.close();
   }
 
-  vector<KSegConstruction *> cs = KSegConstruction::getAllConstructions();
+  std::vector<KSegConstruction *> cs = KSegConstruction::getAllConstructions();
 
   int c = (int)cs.size();
 
@@ -979,9 +981,9 @@
 
 //returns a vector of full paths for potential
 //filenames in the current directory
-vector<QString> KSegWindow::getValidConstructionFiles()
+std::vector<QString> KSegWindow::getValidConstructionFiles()
 {
-  vector<QString> toBeReturned;
+  std::vector<QString> toBeReturned;
 
   QDir myDir = QDir(quickPlayDirectory);
   myDir.setNameFilter("*.sec");
diff -ur kseg-0.3/Makefile kseg-0.3.new/Makefile
--- kseg-0.3/Makefile	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/Makefile	Mon Jul 15 19:39:18 2002
@@ -1,9 +1,9 @@
 # Makefile for KSEG
-CC = gcc
-QTINCLUDE = -I$(QTDIR)/include
+CC = gcc -idirafter .
+QTINCLUDE = -I/usr/X11R6/include/qt
 CCFLAGS = -c -O2 -fno-rtti -fno-exceptions
-LIBS = -lm -L$(QTDIR)/lib -lqt -lz
-MOC = $(QTDIR)/bin/moc
+LIBS = -lm -lqt -lz -L/usr/X11R6/lib
+MOC = moc
 LUPDATE = $(QTDIR)/bin/lupdate
 LRELEASE = $(QTDIR)/bin/lrelease
 
Only in kseg-0.3.new/: debian
diff -ur kseg-0.3/formula/Makefile kseg-0.3.new/formula/Makefile
--- kseg-0.3/formula/Makefile	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/formula/Makefile	Mon Jul 15 19:40:44 2002
@@ -1,9 +1,9 @@
 # Makefile for formula
 CC = gcc
-QTINCLUDE = -I$(QTDIR)/include
+QTINCLUDE = -I/usr/X11R6/include/qt
 CCFLAGS = -c -O2 -fno-rtti -fno-exceptions
 LIBS = 
-MOC = $(QTDIR)/bin/moc
+MOC = moc
 
 OBJECTS = box.o kformula.o kformulaedit.o matrixbox.o MatrixDialog.o
 
Only in kseg-0.3.new/: hash_map
Only in kseg-0.3.new/: hash_set
diff -ur kseg-0.3/menu.cpp kseg-0.3.new/menu.cpp
--- kseg-0.3/menu.cpp	Mon Apr  9 22:24:54 2001
+++ kseg-0.3.new/menu.cpp	Mon Jul 15 19:38:48 2002
@@ -1265,7 +1265,7 @@
   
   G_ref *p = new G_ref;
 
-  vector<int> perm;
+  std::vector<int> perm;
   G_refs permuted;
   bool tmp = match(selectedRefs, given, perm);
   ASSERT(tmp);
